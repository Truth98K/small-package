name: Build selected luci-app plugins

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g. 1.0.0)'
        required: true
        default: '1.0.0'
      packages:
        description: '要编译的插件，逗号分隔'
        required: true
        default: 'luci-app-argon-config,luci-app-autoupdate,luci-app-bypass'

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repository (插件源码在根目录)
        uses: actions/checkout@v4

      - name: Install dependencies, download and extract OpenWrt SDK
        run: |
          sudo apt-get update
          sudo apt-get install -y zstd makeself
          wget https://downloads.openwrt.org/releases/24.10.2/targets/x86/64/openwrt-sdk-24.10.2-x86-64_gcc-13.3.0_musl.Linux-x86_64.tar.zst -O sdk.tar.zst
          tar --use-compress-program=unzstd -xf sdk.tar.zst
          SDK_DIR=$(ls -d openwrt-sdk-*)
          echo "SDK_DIR=$SDK_DIR" >> $GITHUB_ENV

      - name: Copy selected plugin source folders to SDK package directory
        run: |
          cd ${{ env.SDK_DIR }}/package/
          IFS=',' read -ra PKGS <<< "${{ github.event.inputs.packages }}"
          for plugin in "${PKGS[@]}"; do
            echo "复制插件源码: $plugin"
            cp -r ../../$plugin ./
          done

      - name: Batch compile selected plugins
        run: |
          cd ${{ env.SDK_DIR }}
          make defconfig
          IFS=',' read -ra PKGS <<< "${{ github.event.inputs.packages }}"
          for pkg in "${PKGS[@]}"; do
            echo "编译插件 $pkg"
            make package/$pkg/compile V=s || echo "编译 $pkg 失败，继续..."
          done

      - name: Prepare runpkg directory
        run: |
          cd ${{ env.SDK_DIR }}
          mkdir -p runpkg
          cp bin/packages/*/luci-app-*.ipk runpkg/
          cp ../../install.sh runpkg/
          chmod +x runpkg/install.sh

      - name: Build .run installer with makeself
        run: |
          cd ${{ env.SDK_DIR }}
          VERSION=${{ github.event.inputs.version }}
          OUTPUT="../../luci-app-plugins_${VERSION}_x86_64.run"
          makeself --nox11 runpkg "$OUTPUT" "luci-app Plugins Installer v$VERSION" ./install.sh
          echo "RUNFILE=$OUTPUT" >> $GITHUB_ENV

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: luci-app-plugins-run
          path: ${{ env.RUNFILE }}

      - name: Create GitHub Release and upload .run
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.event.inputs.version }}
          name: luci-app plugins v${{ github.event.inputs.version }}
          files: ${{ env.RUNFILE }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
